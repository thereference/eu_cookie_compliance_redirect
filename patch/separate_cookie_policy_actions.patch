Index: js/eu_cookie_compliance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- js/eu_cookie_compliance.js	(revision 48f9e80978d941ae13bce954e883b53048003738)
+++ js/eu_cookie_compliance.js	(date 1519139495000)
@@ -1,250 +1,255 @@
 (function ($) {
-  'use strict';
+    'use strict';
 
-  Drupal.behaviors.eu_cookie_compliance_popup = {
-    attach: function(context, settings) {
-      if (context !== document) {
-        return;
-      }
+    Drupal.behaviors.eu_cookie_compliance_popup = {
+        attach: function(context, settings) {
+            if (context !== document) {
+                return;
+            }
 
-      // If configured, check JSON callback to determine if in EU.
-      if (Drupal.settings.eu_cookie_compliance.popup_eu_only_js) {
-        if (Drupal.eu_cookie_compliance.showBanner()) {
-          var url = Drupal.settings.basePath + 'eu-cookie-compliance-check';
-          var data = {};
-          $.getJSON(url, data, function(data) {
-            // If in the EU, show the compliance popup.
-            if (data.in_eu) {
-              Drupal.eu_cookie_compliance.execute();
-            }
-            // If not in EU, set an agreed cookie automatically.
-            else {
-              Drupal.eu_cookie_compliance.setStatus(2);
-            }
-          });
-        }
-      }
-      // Otherwise, fallback to standard behavior which is to render the popup.
-      else {
-        Drupal.eu_cookie_compliance.execute();
-      }
-    }
-  };
+            // If configured, check JSON callback to determine if in EU.
+            if (Drupal.settings.eu_cookie_compliance.popup_eu_only_js) {
+                if (Drupal.eu_cookie_compliance.showBanner()) {
+                    var url = Drupal.settings.basePath + 'eu-cookie-compliance-check';
+                    var data = {};
+                    $.getJSON(url, data, function(data) {
+                        // If in the EU, show the compliance popup.
+                        if (data.in_eu) {
+                            Drupal.eu_cookie_compliance.execute();
+                        }
+                        // If not in EU, set an agreed cookie automatically.
+                        else {
+                            Drupal.eu_cookie_compliance.setStatus(2);
+                        }
+                    });
+                }
+            }
+            // Otherwise, fallback to standard behavior which is to render the popup.
+            else {
+                Drupal.eu_cookie_compliance.execute();
+            }
+        }
+    };
 
-  Drupal.eu_cookie_compliance = {};
+    Drupal.eu_cookie_compliance = {};
 
-  Drupal.eu_cookie_compliance.execute = function() {
-    try {
-        if (!Drupal.settings.eu_cookie_compliance.popup_enabled) {
-          return;
-        }
-        if (!Drupal.eu_cookie_compliance.cookiesEnabled()) {
-          return;
-        }
-        Drupal.eu_cookie_compliance.updateCheck();
-        var status = Drupal.eu_cookie_compliance.getCurrentStatus();
-        if (status === 0 || status === null) {
-          if (!Drupal.settings.eu_cookie_compliance.disagree_do_not_show_popup || status === null) {
-            Drupal.eu_cookie_compliance.createPopup(Drupal.settings.eu_cookie_compliance.popup_html_info);
-            Drupal.eu_cookie_compliance.attachAgreeEvents();
-          }
-        } else if (status === 1 && Drupal.settings.eu_cookie_compliance.popup_agreed_enabled) {
-          Drupal.eu_cookie_compliance.createPopup(Drupal.settings.eu_cookie_compliance.popup_html_agreed);
-          Drupal.eu_cookie_compliance.attachHideEvents();
-        }
-      }
-      catch(e) {
-      }
-  };
+    Drupal.eu_cookie_compliance.execute = function() {
+        try {
+            if (!Drupal.settings.eu_cookie_compliance.popup_enabled) {
+                return;
+            }
+            if (!Drupal.eu_cookie_compliance.cookiesEnabled()) {
+                return;
+            }
+            Drupal.eu_cookie_compliance.updateCheck();
+            var status = Drupal.eu_cookie_compliance.getCurrentStatus();
+            if (Drupal.settings.eu_cookie_compliance.disagree_do_not_show_popup && status !== null) {
+                Drupal.eu_cookie_compliance.attachDeleteEvents();
+            }
+            switch (status) {
+                case null:
+                case 0:
+                    Drupal.eu_cookie_compliance.createPopup(Drupal.settings.eu_cookie_compliance.popup_html_info);
+                    Drupal.eu_cookie_compliance.attachAgreeEvents();
+                    break;
+                case 1:
+                    if(Drupal.settings.eu_cookie_compliance.popup_agreed_enabled){
+                        Drupal.eu_cookie_compliance.createPopup(Drupal.settings.eu_cookie_compliance.popup_html_agreed);
+                        Drupal.eu_cookie_compliance.attachHideEvents();
+                    }
+                    break;
+            }
+        }
+        catch(e) {
+        }
+    };
 
-  Drupal.eu_cookie_compliance.createPopup = function(html) {
-    // This fixes a problem with jQuery 1.9.
-    var $popup = $('<div></div>').html(html);
-    $popup.attr('id', 'sliding-popup');
-    if (!Drupal.settings.eu_cookie_compliance.popup_use_bare_css) {
-      $popup.height(Drupal.settings.eu_cookie_compliance.popup_height)
-          .width(Drupal.settings.eu_cookie_compliance.popup_width);
-    }
-    $popup.hide();
-    var height = 0;
-    if (Drupal.settings.eu_cookie_compliance.popup_position) {
-      $popup.prependTo('body');
-      height = $popup.height();
-      $popup.show()
-        .attr('class', 'sliding-popup-top clearfix')
-        .css('top', -1 * height)
-        .animate({top: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
-    } else {
-      if (Drupal.settings.eu_cookie_compliance.better_support_for_screen_readers) {
-        $popup.prependTo('body');
-      }
-      else {
-        $popup.appendTo('body');
-      }
-      height = $popup.height();
-      $popup.show()
-        .attr('class', 'sliding-popup-bottom')
-        .css('bottom', -1 * height)
-        .animate({bottom: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
-    }
-  };
+    Drupal.eu_cookie_compliance.createPopup = function(html) {
+        // This fixes a problem with jQuery 1.9.
+        var $popup = $('<div></div>').html(html);
+        $popup.attr('id', 'sliding-popup');
+        if (!Drupal.settings.eu_cookie_compliance.popup_use_bare_css) {
+            $popup.height(Drupal.settings.eu_cookie_compliance.popup_height)
+                .width(Drupal.settings.eu_cookie_compliance.popup_width);
+        }
+        $popup.hide();
+        var height = 0;
+        if (Drupal.settings.eu_cookie_compliance.popup_position) {
+            $popup.prependTo('body');
+            height = $popup.height();
+            $popup.show()
+                .attr('class', 'sliding-popup-top clearfix')
+                .css('top', -1 * height)
+                .animate({top: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
+        } else {
+            if (Drupal.settings.eu_cookie_compliance.better_support_for_screen_readers) {
+                $popup.prependTo('body');
+            }
+            else {
+                $popup.appendTo('body');
+            }
+            height = $popup.height();
+            $popup.show()
+                .attr('class', 'sliding-popup-bottom')
+                .css('bottom', -1 * height)
+                .animate({bottom: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
+        }
+    };
 
-  Drupal.eu_cookie_compliance.attachAgreeEvents = function() {
-    var clickingConfirms = Drupal.settings.eu_cookie_compliance.popup_clicking_confirmation;
-    var scrollConfirms = Drupal.settings.eu_cookie_compliance.popup_scrolling_confirmation;
+    Drupal.eu_cookie_compliance.attachAgreeEvents = function() {
+        var clickingConfirms = Drupal.settings.eu_cookie_compliance.popup_clicking_confirmation;
+        var scrollConfirms = Drupal.settings.eu_cookie_compliance.popup_scrolling_confirmation;
 
-    $('.agree-button').click(Drupal.eu_cookie_compliance.acceptAction);
+        $('.agree-button').click(Drupal.eu_cookie_compliance.acceptAction);
 
-    if (clickingConfirms) {
-      $('a, input[type=submit], button[type=submit]').bind('click.euCookieCompliance', Drupal.eu_cookie_compliance.acceptAction);
-    }
+        if (clickingConfirms) {
+            $('a, input[type=submit], button[type=submit]').bind('click.euCookieCompliance', Drupal.eu_cookie_compliance.acceptAction);
+        }
 
-    if (scrollConfirms) {
-      $(window).bind('scroll', Drupal.eu_cookie_compliance.acceptAction);
-    }
+        if (scrollConfirms) {
+            $(window).bind('scroll', Drupal.eu_cookie_compliance.acceptAction);
+        }
 
-    $('.find-more-button').not('.find-more-button-processed').addClass('find-more-button-processed').click(Drupal.eu_cookie_compliance.moreInfoAction);
-  };
+        $('.find-more-button').not('.find-more-button-processed').addClass('find-more-button-processed').click(Drupal.eu_cookie_compliance.moreInfoAction);
+    };
 
-  Drupal.eu_cookie_compliance.attachHideEvents = function() {
-    var popupHideAgreed = Drupal.settings.eu_cookie_compliance.popup_hide_agreed;
-    var clickingConfirms = Drupal.settings.eu_cookie_compliance.popup_clicking_confirmation;
-    $('.hide-popup-button').click(function() {
-      Drupal.eu_cookie_compliance.changeStatus(2);
-    });
-    if (clickingConfirms) {
-      $('a, input[type=submit], button[type=submit]').unbind('click.euCookieCompliance');
-    }
-    if (popupHideAgreed) {
-      $('a, input[type=submit], button[type=submit]').bind('click.euCookieComplianceHideAgreed', function() {
-        Drupal.eu_cookie_compliance.changeStatus(2);
-      });
-    }
-    $('.find-more-button').not('.find-more-button-processed').addClass('find-more-button-processed').click(Drupal.eu_cookie_compliance.moreInfoAction);
-  };
+    Drupal.eu_cookie_compliance.attachHideEvents = function() {
+        var popupHideAgreed = Drupal.settings.eu_cookie_compliance.popup_hide_agreed;
+        var clickingConfirms = Drupal.settings.eu_cookie_compliance.popup_clicking_confirmation;
+        $('.hide-popup-button').click(function() {
+            Drupal.eu_cookie_compliance.changeStatus(2);
+        });
+        if (clickingConfirms) {
+            $('a, input[type=submit], button[type=submit]').unbind('click.euCookieCompliance');
+        }
+        if (popupHideAgreed) {
+            $('a, input[type=submit], button[type=submit]').bind('click.euCookieComplianceHideAgreed', function() {
+                Drupal.eu_cookie_compliance.changeStatus(2);
+            });
+        }
+        $('.find-more-button').not('.find-more-button-processed').addClass('find-more-button-processed').click(Drupal.eu_cookie_compliance.moreInfoAction);
+    };
 
-  Drupal.eu_cookie_compliance.acceptAction = function () {
-    var agreedEnabled = Drupal.settings.eu_cookie_compliance.popup_agreed_enabled;
-    var nextStatus = 1;
-    if(!agreedEnabled) {
-      Drupal.eu_cookie_compliance.setStatus(1);
-      nextStatus = 2;
-    }
-    Drupal.eu_cookie_compliance.changeStatus(nextStatus);
-  };
+    Drupal.eu_cookie_compliance.acceptAction = function () {
+        var agreedEnabled = Drupal.settings.eu_cookie_compliance.popup_agreed_enabled;
+        var nextStatus = 1;
+        if(!agreedEnabled) {
+            Drupal.eu_cookie_compliance.setStatus(1);
+            nextStatus = 2;
+        }
+        Drupal.eu_cookie_compliance.changeStatus(nextStatus);
+    };
 
-  Drupal.eu_cookie_compliance.moreInfoAction = function () {
-    if (Drupal.settings.eu_cookie_compliance.disagree_do_not_show_popup) {
-      Drupal.eu_cookie_compliance.setStatus(0);
-      $('#sliding-popup').remove();
-    }
-    else {
-      if (Drupal.settings.eu_cookie_compliance.popup_link_new_window) {
-        window.open(Drupal.settings.eu_cookie_compliance.popup_link);
-      }
-      else {
-        window.location.href = Drupal.settings.eu_cookie_compliance.popup_link;
-      }
-    }
-  };
+    Drupal.eu_cookie_compliance.moreInfoAction = function (url) {
+        var source = Drupal.settings.eu_cookie_compliance.popup_link;
+        if(typeof url === 'string'){
+            source = url;
+        }
+        if (Drupal.settings.eu_cookie_compliance.popup_link_new_window) {
+            window.open(source);
+        }
+        else {
+            window.location.href = source;
+        }
+    };
 
-  Drupal.eu_cookie_compliance.getCurrentStatus = function() {
-    var value = $.cookie('cookie-agreed');
-    value = parseInt(value);
-    if (isNaN(value)) {
-      value = null;
-    }
-    return value;
-  };
+    Drupal.eu_cookie_compliance.getCurrentStatus = function() {
+        var value = $.cookie('cookie-agreed');
+        value = parseInt(value);
+        if (isNaN(value)) {
+            value = null;
+        }
+        return value;
+    };
 
-  Drupal.eu_cookie_compliance.changeStatus = function(value) {
-    var status = Drupal.eu_cookie_compliance.getCurrentStatus();
-    if (status === value) {
-      return;
-    }
-    if (Drupal.settings.eu_cookie_compliance.popup_position) {
-      $('.sliding-popup-top').animate({top: $('#sliding-popup').height() * -1}, Drupal.settings.eu_cookie_compliance.popup_delay, function () {
-        if (status === null) {
-          $('#sliding-popup').html(Drupal.settings.eu_cookie_compliance.popup_html_agreed).animate({top: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
-          Drupal.eu_cookie_compliance.attachHideEvents();
-        }
-        else if (status === 1) {
-          $('#sliding-popup').remove();
-          Drupal.eu_cookie_compliance.reloadPage();
-        }
-      });
-    } else {
-      $('.sliding-popup-bottom').animate({bottom: $('#sliding-popup').height() * -1}, Drupal.settings.eu_cookie_compliance.popup_delay, function () {
-        if (status === null) {
-          $('#sliding-popup').html(Drupal.settings.eu_cookie_compliance.popup_html_agreed).animate({bottom: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
-          Drupal.eu_cookie_compliance.attachHideEvents();
-        }
-        else if (status === 1) {
-          $('#sliding-popup').remove();
-          Drupal.eu_cookie_compliance.reloadPage();
-        }
-      });
-    }
-    Drupal.eu_cookie_compliance.setStatus(value);
-  };
+    Drupal.eu_cookie_compliance.changeStatus = function(value) {
+        var status = Drupal.eu_cookie_compliance.getCurrentStatus();
+        if (status === value) {
+            return;
+        }
+        if (Drupal.settings.eu_cookie_compliance.popup_position) {
+            $('.sliding-popup-top').animate({top: $('#sliding-popup').height() * -1}, Drupal.settings.eu_cookie_compliance.popup_delay, function () {
+                if (status === null) {
+                    $('#sliding-popup').html(Drupal.settings.eu_cookie_compliance.popup_html_agreed).animate({top: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
+                    Drupal.eu_cookie_compliance.attachHideEvents();
+                }
+                else if (status === 1) {
+                    $('#sliding-popup').remove();
+                    Drupal.eu_cookie_compliance.reloadPage();
+                }
+            });
+        } else {
+            $('.sliding-popup-bottom').animate({bottom: $('#sliding-popup').height() * -1}, Drupal.settings.eu_cookie_compliance.popup_delay, function () {
+                if (status === null) {
+                    $('#sliding-popup').html(Drupal.settings.eu_cookie_compliance.popup_html_agreed).animate({bottom: 0}, Drupal.settings.eu_cookie_compliance.popup_delay);
+                    Drupal.eu_cookie_compliance.attachHideEvents();
+                }
+                else if (status === 1) {
+                    $('#sliding-popup').remove();
+                    Drupal.eu_cookie_compliance.reloadPage();
+                }
+            });
+        }
+        Drupal.eu_cookie_compliance.setStatus(value);
+    };
 
-  Drupal.eu_cookie_compliance.setStatus = function(status) {
-    var date = new Date();
-    var domain = Drupal.settings.eu_cookie_compliance.domain ? Drupal.settings.eu_cookie_compliance.domain : '';
-    var path = Drupal.settings.basePath;
-    if(path.length > 1) {
-      var pathEnd = path.length - 1;
-      if (path.lastIndexOf('/') === pathEnd) {
-        path = path.substring(0, pathEnd);
-      }
-    }
-    date.setDate(date.getDate() + parseInt(Drupal.settings.eu_cookie_compliance.cookie_lifetime));
-    $.cookie('cookie-agreed', status, {expires: date, path: path, domain: domain});
-  };
+    Drupal.eu_cookie_compliance.setStatus = function(status) {
+        var date = new Date();
+        var domain = Drupal.settings.eu_cookie_compliance.domain ? Drupal.settings.eu_cookie_compliance.domain : '';
+        var path = Drupal.settings.basePath;
+        if(path.length > 1) {
+            var pathEnd = path.length - 1;
+            if (path.lastIndexOf('/') === pathEnd) {
+                path = path.substring(0, pathEnd);
+            }
+        }
+        date.setDate(date.getDate() + parseInt(Drupal.settings.eu_cookie_compliance.cookie_lifetime));
+        $.cookie('cookie-agreed', status, {expires: date, path: path, domain: domain});
+    };
 
-  Drupal.eu_cookie_compliance.hasAgreed = function() {
-    var status = Drupal.eu_cookie_compliance.getCurrentStatus();
-    return (status === 1 || status === 2);
-  };
+    Drupal.eu_cookie_compliance.hasAgreed = function() {
+        var status = Drupal.eu_cookie_compliance.getCurrentStatus();
+        return (status === 1 || status === 2);
+    };
 
-  Drupal.eu_cookie_compliance.showBanner = function() {
-    var showBanner = false;
-    var status = Drupal.eu_cookie_compliance.getCurrentStatus();
-    if (status === 0 || status === null) {
-      if (!Drupal.settings.eu_cookie_compliance.disagree_do_not_show_popup || status === null) {
-        showBanner = true;
-      }
-    } else if (status === 1 && Drupal.settings.eu_cookie_compliance.popup_agreed_enabled) {
-      showBanner = true;
-    }
-    return showBanner;
-  };
+    Drupal.eu_cookie_compliance.showBanner = function() {
+        var showBanner = false;
+        var status = Drupal.eu_cookie_compliance.getCurrentStatus();
+        if (status === 0 || status === null) {
+            if (!Drupal.settings.eu_cookie_compliance.disagree_do_not_show_popup || status === null) {
+                showBanner = true;
+            }
+        } else if (status === 1 && Drupal.settings.eu_cookie_compliance.popup_agreed_enabled) {
+            showBanner = true;
+        }
+        return showBanner;
+    };
 
-  Drupal.eu_cookie_compliance.cookiesEnabled = function() {
-    var cookieEnabled = navigator.cookieEnabled;
-    if (typeof navigator.cookieEnabled === 'undefined' && !cookieEnabled) {
-      document.cookie = 'testCookie';
-      cookieEnabled = (document.cookie.indexOf('testCookie') !== -1);
-    }
-    return cookieEnabled;
-  };
+    Drupal.eu_cookie_compliance.cookiesEnabled = function() {
+        var cookieEnabled = navigator.cookieEnabled;
+        if (typeof navigator.cookieEnabled === 'undefined' && !cookieEnabled) {
+            document.cookie = 'testCookie';
+            cookieEnabled = (document.cookie.indexOf('testCookie') !== -1);
+        }
+        return cookieEnabled;
+    };
 
-  Drupal.eu_cookie_compliance.reloadPage = function() {
-    if (Drupal.settings.eu_cookie_compliance.reload_page) {
-      location.reload();
-    }
-  };
+    Drupal.eu_cookie_compliance.reloadPage = function() {
+        if (Drupal.settings.eu_cookie_compliance.reload_page) {
+            location.reload();
+        }
+    };
 
-  // This code upgrades the cookie agreed status when upgrading for an old version.
-  Drupal.eu_cookie_compliance.updateCheck = function () {
-    var legacyCookie = 'cookie-agreed-' + Drupal.settings.eu_cookie_compliance.popup_language;
-    var domain = Drupal.settings.eu_cookie_compliance.domain ? Drupal.settings.eu_cookie_compliance.domain : '';
-    var path = Drupal.settings.basePath;
-    var cookie;
-    if ((cookie = $.cookie(legacyCookie)) !== null) {
-      $.cookie('cookie-agreed', cookie, { path:  path, domain: domain });
-      $.cookie(legacyCookie, null, { path: path, domain: domain });
-    }
-  }
+    // This code upgrades the cookie agreed status when upgrading for an old version.
+    Drupal.eu_cookie_compliance.updateCheck = function () {
+        var legacyCookie = 'cookie-agreed-' + Drupal.settings.eu_cookie_compliance.popup_language;
+        var domain = Drupal.settings.eu_cookie_compliance.domain ? Drupal.settings.eu_cookie_compliance.domain : '';
+        var path = Drupal.settings.basePath;
+        var cookie;
+        if ((cookie = $.cookie(legacyCookie)) !== null) {
+            $.cookie('cookie-agreed', cookie, { path:  path, domain: domain });
+            $.cookie(legacyCookie, null, { path: path, domain: domain });
+        }
+    }
 
 })(jQuery);
Index: eu_cookie_compliance.admin.inc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- eu_cookie_compliance.admin.inc	(revision 48f9e80978d941ae13bce954e883b53048003738)
+++ eu_cookie_compliance.admin.inc	(date 1519139507000)
@@ -272,9 +272,9 @@
 
   $form['advanced']['eu_cookie_compliance']['disagree_do_not_show_popup'] = array(
     '#type' => 'checkbox',
-    '#title' => t('Do not show popup after user clicks on "Disagree" button.'),
+    '#title' => t('Do not show popup after user clicks on "Disagree" button on a cookiepolicy node.'),
     '#default_value' => isset($popup_settings['disagree_do_not_show_popup']) ? $popup_settings['disagree_do_not_show_popup'] : 0,
-    '#description' => t('Enabling this will make it possible to record the fact that the user disagrees without the user having to see the privacy policy.'),
+    '#description' => t('Enabling this will make it possible to record the fact that the user disagrees without the user having to see the privacy policy. The user can only disagree to cookies on the seperate cookiepolicy pages if a button for this is provided.'),
   );
 
   $form['advanced']['eu_cookie_compliance']['reload_page'] = array(
